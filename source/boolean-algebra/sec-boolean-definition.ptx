<section xml:id="sec-boolean-definition" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Definition</title>
    <p>
        Boolean algebra is a branch of algebra that deals with variables that can take two values: true or false. This form of algebra is foundational in fields such as digital electronics and computer science where binary systems are prevalent.
    </p>
    <p>
        In SageMath, Boolean algebra can be manipulated through various built-in functions designed for handling Boolean variables and expressions.
    </p>
    <aside>
        <title>Notes</title>
        <p>
          Boolean algebra is crucial in digital circuit design. For example, simplifying the expression of a digital circuit can minimize the number of gates used, which reduces cost and power consumption. Techniques such as Karnaugh maps and Boolean simplification are common in the industry.
        </p>
      </aside>
    <sage>
        <input>
            B = BooleanPolynomialRing(3, 'x')
            f = B('x0 + x1 * x2')
            show(f)
        </input>
        <output>
            # Outputs the Boolean expression in polynomial form
        </output>
    </sage>
    <p>
        A common structure analyzed in Boolean algebra is the lattice. Below, we show how to work with a divisor lattice, which is a specific type of lattice useful in various mathematical computations.
    </p>
    <sage>
        <input>
            p = Posets.DivisorLattice(20)
            p.show()
        </input>
        <output>
            # This will display the lattice structure for divisors of the number 20.
        </output>
    </sage>
    <p>
        The following Sage cell checks whether the divisor lattice is distributive. A distributive lattice is one where the operations of join and meet distribute over each other.
    </p>
    <sage>
        <input>
            p = Posets.DivisorLattice(20)
            p.is_distributive(certificate='True')
        </input>
        <output>
            # Returns True if the lattice is distributive, along with a certificate if applicable.
        </output>
    </sage>
    <p>
        Another important property in Boolean algebra is the complemented lattice. A complemented lattice is one where every element has a complement in the lattice.
    </p>
    <sage>
        <input>
            p = Posets.DivisorLattice(20)
            p.is_complemented(certificate='True')
        </input>
        <output>
            # Returns True if the lattice is complemented, along with a certificate if applicable.
        </output>
    </sage>
</section>
