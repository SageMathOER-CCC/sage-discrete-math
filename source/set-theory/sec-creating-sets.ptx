<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="creating-sets" xmlns:xi="http://www.w3.org/2001/XInclude">
	<title>Creating Sets</title>

	<subsection xml:id="subsec-Ways-to-create-a-set">
		<title>Ways to Create a Set</title>
		<p>There are two ways we can define a set.</p>
		
		<ul>
		  <li>
			<p><term>Curly Brackets - Sets:</term><c>{}</c></p>
			<p><term>Definition:</term> Curly brackets are used to define a mathematical set.</p>
			<p><term>Characteristics:</term></p>
			<ul>
			  <li>Unordered: The elements in a set do not have a specific order.</li>
			  <li>Unique Elements: Sets cannot have duplicate elements. If you try to add a duplicate element to a set, it will be ignored.</li>
			  <li>Mathematical Set Operations: Sets support operations like union, intersection, difference, etc.</li>
			</ul>
			<p><term>Use-Case Example:</term> Sets are ideal when you need to maintain a collection of unique items and are interested in performing set operations. For instance, when dealing with distinct mathematical objects like prime numbers, graph vertices, or unique solutions to an equation.</p>
		  </li>
	  
		  <li>
			<p><term>Square Brackets - Lists:</term><c>[]</c></p>
			<p><term>Definition:</term> Square brackets are used to define a list.</p>
			<p><term>Characteristics:</term></p>
			<ul>
			  <li>Ordered: The elements in a list maintain a specific order.</li>
			  <li>Duplicates Allowed: Lists can have duplicate elements.</li>
			  <li>Indexing and Slicing: You can access elements by their position and slice parts of the list.</li>
			</ul>
			<p><term>Use-Case Example:</term> Lists are suitable for ordered collections of items where duplicates are allowed or required, and when you need to perform operations like iteration in a specific order, indexing, slicing, etc.</p>
		  </li>
		</ul>
	  </subsection>
	
	  <subsection xml:id="subsec-create-a-set">
		<title>Create a Set</title>
		<p>
		  Create a variable. Do not use reserved word or white space for a variable name. After the variable, we use an equal sign to assign (store) value. Define a set by listing the contents separated by commas in between a pair of curly braces.
		</p>
		<sage>
		  <input>
			A = {1, 2, 3, 4, 5}
			B = {3, 4, 5, 6}
			print("Set A:", A)
			print("Set B:", B)
		  </input>
		  <output></output>
		</sage>
	  </subsection>

	  <subsection xml:id="subsec-subsets">
		<title>Subsets</title>
		<p>
			Assume we have a Set A = {1, 2, 3, 4, 5}, to list all the subsets included in this set, we can use the <c>Subsets()</c> and <c>list()</c> functions.
		</p>
		<sage>
		  <input>
			A = Subsets([1, 2, 3, 4, 5])
			list(A)
		  </input>
		  <output></output>
		</sage>
	  </subsection>
	  
	</section>