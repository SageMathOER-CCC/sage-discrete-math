<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sec-logical-operation" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Logical Operators</title>
    <introduction>
        <p>
            In Sage, logical operations such as AND <c>&amp;</c>, OR <c>|</c>, NOT <c>~</c>, conditional <c>-&gt;</c>, and biconditional <c>&lt;-&gt;</c> play crucial roles in constructing and evaluating logical expressions.
        </p>
        <tabular>
                    <row>
                        <cell>Operator</cell>
                        <cell>Symbol</cell>
                        <cell>Description</cell>
                    </row>
                    <row>
                        <cell>AND</cell>
                        <cell>&amp;</cell>
                        <cell>True if both operands are true</cell>
                    </row>
                    <row>
                        <cell>OR</cell>
                        <cell>|</cell>
                        <cell>True if at least one operand is true</cell>
                    </row>
                    <row>
                        <cell>NOT</cell>
                        <cell>~</cell>
                        <cell>Negates the truth value of its operand</cell>
                    </row>
                    <row>
                        <cell>Conditional</cell>
                        <cell>-&gt;</cell>
                        <cell>True if the first operand implies the second</cell>
                    </row>
                    <row>
                        <cell>Biconditional</cell>
                        <cell>&lt;-&gt;</cell>
                        <cell>True if both operands are equal</cell>
                    </row>
        </tabular>
    </introduction>

    <!-- Logical Operations in Sage -->
    <subsection>
        <title>Boolean Formula</title>
        
        <p>
            Sage's <c>propcalc.formula()</c> function allows for the creation of Boolean formulas using variables and logical operators.
        </p>
        <aside>
            <title>Tips!</title>
            <p>
                Logical operations can model decision-making processes in programming, such as determining whether a set of conditions are met before executing a particular block of code.
            </p>
        </aside>
        <sage>
            <input>
                propcalc.formula('(p &amp; q) | (~p)')
            </input>
            <output></output>
        </sage>
    </subsection>

</section>
