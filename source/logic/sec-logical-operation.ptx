<section xml:id="sec-logical-operation" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Logical Operators</title>
    <idx><h>logical operators</h><h>and</h></idx>
    <idx><h>logical operators</h><h>or</h></idx>
    <idx><h>logical operators</h><h>not</h></idx>
    <idx><h>logical operators</h><h>conditional</h></idx>
    <idx><h>logical operators</h><h>biconditional</h></idx>
    <introduction>
        <p>
            In Sage, logical operations such as AND <c>&amp;</c>, OR <c>|</c>, NOT <c>~</c>, conditional <c>-&gt;</c>, and biconditional <c>&lt;-&gt;</c> play crucial roles in constructing and evaluating logical expressions.
        </p>
        <tabular>
            <row>
                <cell>Operator</cell>
                <cell>Symbol</cell>
                <cell>Mathematical Notation</cell>
            </row>
            <row>
                <cell>AND</cell>
                <cell>&amp;</cell>
                <cell><m>\land</m></cell>
            </row>
            <row>
                <cell>OR</cell>
                <cell>|</cell>
                <cell><m>\lor</m></cell>
            </row>
            <row>
                <cell>NOT</cell>
                <cell>~</cell>
                <cell><m>\lnot</m></cell>
            </row>
            <row>
                <cell>Conditional</cell>
                <cell>-&gt;</cell>
                <cell><m>\rightarrow</m></cell>
            </row>
            <row>
                <cell>Biconditional</cell>
                <cell>&lt;-&gt;</cell>
                <cell><m>\leftrightarrow</m></cell>
            </row>
        </tabular>
        <aside>
            <title>Notes</title>
            <p>
                Logical operators are essential in artificial intelligence and machine learning algorithms, particularly in decision-making systems. For example, in an autonomous vehicle, the carâ€™s system uses AND, OR, and NOT gates to decide whether to brake, accelerate, or steer based on inputs from multiple sensors (like speed, distance from obstacles, or road conditions). The combination of these logical decisions ensures that the vehicle operates safely and efficiently by evaluating real-time data and making split-second choices.
            </p>
        </aside>
        
    </introduction>
    <!-- Logical Operations in Sage -->
    <subsection>
        <title>Boolean Formula</title>
        
        <p>
            Sage's <c>propcalc.formula()</c> function allows for the creation of Boolean formulas using variables and logical operators. We can then use <c>show</c> function to display the mathematical notations.
        </p>
        <sage>
            <input>
                A = propcalc.formula('(p &amp; q) | (~p)')
                show(A)
            </input>
            <output>
                # Displays the Boolean formula (p AND q) OR (NOT p) in mathematical notation.
            </output>
        </sage>
    </subsection>

</section>
