<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sec-truth-table" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Truth Tables</title>

     <!-- Truth Tables -->


        <p>
            The <c>truthtable()</c> function in Sage generates the truth table for a given logical expression.
        </p>
        <aside>
            <title>Tips!</title>
            <p>
                Constructing truth tables is a practical method for debugging complex logical conditions in software development, ensuring all scenarios are accounted for.
            </p>
        </aside>
        <sage>
            <input>
                A = propcalc.formula('p -&gt; q')
                A.truthtable()
            </input>
            <output></output>
        </sage>
        <p>
            An alternative way to display the table with better separation and visuals would be to use <c>SymbolicLogic()</c>, <c>statement()</c>, <c>truthtable()</c> and the <c>print_table()</c> functions.
        </p>
        <sage>
            <input>
                A = SymbolicLogic()
                B = A.statement('p -&gt; q')
                C = A.truthtable(B)
                A.print_table(C)
            </input>
            <output></output>
        </sage>
        <p>
            <c>SymbolicLogic()</c> creates an instance for handling symbolic logic operations, while <c>statement()</c> defines the given statement. The <c>truthtable()</c> method generates a truth table for this statement, and <c>print_table()</c> displays it.
        </p>


    <!-- Truth Tables for Three Variables -->


    <p>
        Expanding on the concept of truth tables, we can analyze logical expressions involving three variables. This provides a deeper understanding of the interplay between multiple conditions. The <c>truthtable()</c> function accommodates expressions with any reasonable number of variables.
    </p>
    <aside>
        <title>Tips!</title>
        <p>
            Truth tables for three variables are particularly useful in the study of digital circuits and Boolean algebra, where each variable represents a different input or condition.
        </p>
    </aside>
    <sage>
        <input>
            B = propcalc.formula('(p &amp; q) -&gt; r')
            B.truthtable()
        </input>
        <output></output>
    </sage>

</section> 