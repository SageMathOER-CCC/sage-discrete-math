<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="data-types" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Data Types</title>
    <introduction>
        <p>
            SageMath is a Python-based system, integrating various open-source mathematics software packages. Learning the fundamentals of Python allows users to fully utilize SageMath and equips them with broader applicable skills.
        </p>
    </introduction>
    
    <p>Python has several built-in data types and SageMath adds more.</p>

    <p>
        <ul>
            <li>
                <p>
                    <term>Integer</term>: whole number.
                    <ul>
                        <li>
                            <p>
                                <c>42</c>, <c>-7</c>.
                            </p>
                        </li>
                        <li>
                            <p>
                                <c>int</c> is a built in Python integer. 
                            </p>
                        </li>
                        <li>
                            <p>
                                Sage uses its own <c>Integer</c> data type to handle arbitrary large integers with exact arithmetic and converts an <c>int</c> to a Sage <c>Integer</c> unless you specify with <c>int()</c>
                            </p>
                        </li>
                    </ul>
                </p>
            </li>
            <li>
                <p>
                    <term>Float</term>: Numbers with a decimal point.
                    <ul>
                        <li>
                            <p>
                                <c>3.14</c>, <c>-0.001</c>.
                            </p>
                        </li>
                    </ul>
                </p>
            </li>
            <li>
                <p>
                    <term>Strings</term>: Sequence of characters used for text. You can use single or double quotes.
                    <ul>
                        <li>
                            <p>
                                <c>'Hello'</c>, <c>"World"</c>.
                            </p>
                        </li>
                    </ul>
                </p>
            </li>
            <li>
                <p>
                    <term>Booleans</term>: Represents truth values.
                    <ul>
                        <li>
                            <p>
                                <c>True</c> and <c>False</c>.
                            </p>
                        </li>
                    </ul>
                </p>
            </li>
            <li>
                <p>
                    <term>Lists</term>: Ordered, mutable collections of items.
                    <ul>
                        <li>
                            <p>
                                <c>[1, 2, 3]</c>.
                            </p>
                        </li>
                    </ul>
                </p>
            </li>
            <li>
                <p>
                    <term>Tuples</term>: Ordered, immutable collections.
                    <ul>
                        <li>
                            <p>
                                <c>(1, 2, 3)</c>.
                            </p>
                        </li>
                    </ul>
                </p>
            </li>
            <li>
                <p>
                    <term>Dictionaries</term>: Collections of key-value pairs.
                    <ul>
                        <li>
                            <p>
                                <c>{"name": "Alice", "age": 25}</c>.
                            </p>
                        </li>
                    </ul>
                </p>
            </li>
        </ul>
    </p>

    <sage>
        <input>
            # You can ask Sage to return the data type of an object
            # Here is an example of the Sage Integer type
            type(2)
        </input>
    </sage>
    <sage>
        <input>
            # You can ask Sage to return the data type of an object
            # Here is an example of the built-in python int
            type(int(2))
        </input>
    </sage>
    <sage>
        <input>
            # Print a string
            print("Hello, World")
        </input>
    </sage>
    <sage>
        <input>
            # == is the mathematical equality operator, not to be confused with the assignment operator, = 
        </input>
    </sage>

</section>