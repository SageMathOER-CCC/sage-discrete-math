<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="data-types" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Data Types</title>
    <introduction>
        <p>
            SageMath is a Python-based system, integrating various open-source mathematics software packages. Python has several built-in data types. SageMath uses Pythons data types along with SageMath classes.
        </p>
    </introduction>

    <p>
        <term>Integer</term>: whole number.
    </p>
    <sage>
        <input>
            # You can ask Sage to return the data type of an object
            # Here is an example of the Sage Integer type
            mySageInteger = 2
            type(mySageInteger)
        </input>
    </sage>
    <sage>
        <input>
            # Here is an example of the built-in python int
            myPythonInt = int(2)
            type(myPythonInt)
        </input>
    </sage>

    <p>
        <term>Float</term>: Numbers with a decimal point.
    </p>
    <sage>
        <input>
            # Here is an example of the built-in python float
            myPythonFloat = float(1.1)
            type(myPythonFloat)
        </input>
    </sage>
    <sage>
        <input>
            # By default, SageMath represent a floating point number with the RealLiteral class

            mySageRealLiteral = 1.1
            type(mySageRealLiteral)
        </input>
    </sage>

    <p>
        <term>Strings</term>: Sequence of characters used for text. You can use single or double quotes.
    </p>
    <sage>
        <input>
            myString = "Hello"
            type(myString)
        </input>
    </sage>

    <p>
        <term>Booleans</term>: Represents truth values.
    </p>
    <sage>
        <input>
            myFirstBool = True
            type(myFirstBool)
        </input>
    </sage>
    <sage>
        <input>
            mySecondBool = False
            type(mySecondBool)
        </input>
    </sage>
    <sage>
        <input> 
            myThirdBool = 1 == 1           
            type(myThirdBool)
        </input>
    </sage>
    
    <p>
        <term>Lists</term>: Ordered mutable collections of items. Mutable means that the value can be changed.
    </p>
    <sage>
        <input>
            myList = [1, 2, 3, 3]             
            type(myList)
        </input>
    </sage>

    <p>
        <term>Tuples</term>: Ordered, immutable collections. Immutable means that the value cannot be changed.
    </p>
    <sage>
        <input>
            myTuple = (1, 2 , 3)             
            type(myTuple)
        </input>
    </sage>

    <p>
        <term>Dictionaries</term>: Collections of key-value pairs.
    </p>
    <sage>
        <input>
            myDictionary = {"name": "Alice", "age": 25}             
            type(myDictionary)
        </input>
    </sage>
</section>