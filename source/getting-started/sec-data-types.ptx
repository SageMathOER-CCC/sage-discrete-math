<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="data-types" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Data Types</title>
  <p>
    Let's ask sage what type of <term>object</term> this is.
  </p>

  <p>
    In the following example Sage does not evaluate an approximation of <c>sqrt(2) * log(3)</c>. Sage will retain the symbolic value for accuracy.
  </p>
  <sage>
      <input>
          mySymbolic = sqrt(2) * log(3)
          print(type(mySymbolic))
          print(mySymbolic)
      </input>
  </sage>

  <p>
    <c>True</c> and <c>False</c> <term>boolean</term> values. 
  </p>

  <sage>
    <input>
        # Check if 5 in contained in the set of prime numbers
        f = 5 in Primes()
        type(f)
        print(f)
    </input>
  </sage>

  <p>
    <term>Lists</term>: Ordered mutable collections of items within a pair of square brackets <c>[]</c>. If an object is mutable, the value can be changed after it is created.
  </p>
  <sage>
      <input>
          l = [1, 3, 3, 2]
          print(type(l))
          print(l)
      </input>
  </sage>

  <p>
      <term>Tuples</term>: Ordered, immutable collections within a pair of parenthesis <c>()</c>. If an object is immutable, the value cannot be changed after it is created.
  </p>
  <sage>
      <input>
          t = (1, 3, 3, 2)
          print(type(t))
          print(t)
      </input>
  </sage>

  <p>
    <term>set</term>: <c>sets()</c> with lowercase <c>s</c> are built into Python. Python sets are collections of unique items within a pair of curly braces <c>{}</c>.
  </p>
  <sage>
      <input>
          s = {1, 3, 3, 2}
          # you can also define a set using the set() function
          # myPythonSet = set([1, 3, 3, 2])
          print(type(s))
          print(s)
      </input>
  </sage>

  <p>
    <term>Set</term> is a built-in Sage class. It is similar to a Python set, with added functionality for mathematical operations.
  </p>
  <sage>
      <input>
          S = Set([1, 3, 3, 2])
          print(type(S))
          print(S)
      </input>
  </sage>

  <p>
      <term>Dictionaries</term>: Collections of key-value pairs.
  </p>
  <sage>
      <input>
        # Python dictionary for the textbook
        d = {
            "title": "Discrete Math with SageMath",
            "authors": ["Zunaid Ahmed", "Hellen Colman", "Samuel Lubliner"],
            "institution": "City Colleges of Chicago",
            "topics_covered": [
                "Set Theory",
                "Cartesian Products",
                "Combinations and permutations",
                "Binomial theorem",
                "Logic: Propositions. True tables",
                "Quantifiers",
                "Relations",
                "Functions",
                "Recursion",
                "Graphs",
                "Trees",
                "Lattices",
                "Boolean algebras and functions"
                ],
                "format": ["Web", "PDF"]
            }
        print(type(d)    
        print(d)
      </input>
  </sage>

  <p>
    <term>Strings</term>: Sequence of characters used for text. You can use single or double quotes.
  </p>
  <sage>
      <input>
          greeting = "Hello, World"
          print(type(greeting))
          print(greeting)
      </input>
  </sage>

</section>