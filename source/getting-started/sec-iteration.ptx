<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="iteration" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Iteration</title><idx><h>iteration</h><h>for loop</h></idx>
    <p>
        Iteration is a programming technique that allows us to efficiently write code by repeating instructions with minimal syntax. The <c>for</c> loop assigns a value from a sequence to the loop variable and executes the loop body once for each value.
    </p>
    <sage>
        <input>
            # Print the numbers from 0 to 19
            # Notice the loop is zero-indexed and excludes 20
            for i in range(20):
                print(i)
        </input>
    </sage>

    <sage>
        <input>
            # Here, the starting value of the range is included
            for i in range(10, 20):
                print(i)
        </input>
    </sage>

    <sage>
        <input>
            # We can also specify a step value
            for i in range(30, 90, 9):
                print(i)
        </input>
    </sage>
    <idx><h>iteration</h><h>list comprehension</h></idx>
    <p>
        Here is an example of list comprehension, a concise way to create lists. Unlike Python's <c>range()</c>, the Sage range syntax for list comprehension includes the ending value.
    </p>
    <sage>
        <input>
            # Create a list of the cubes of the numbers from 9 to 20
            # The for loop is written inside the square brackets
            [n**3 for n in [9..20]]
        </input>
    </sage>
    <p>
        We can also specify a condition in list comprehension. Let's create a list that only contains even numbers.
    </p>
    <sage>
        <input>
            [n**3 for n in [9..20] if n % 2 == 0]
        </input>
    </sage>
</section>