<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="relations-on-a-set" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Relations on a set</title>
    
    <p>
        Let's explore specific kind of relation. When the two sets are identical, we refer to a relation from <m>A</m> to <m>A</m> as a relation <term>on</term> <m>A</m>.
    </p>
    <p>
        <em>Example 1:</em> Consider the set <m>A = \{2,3,4,6,8\}</m>. Let's define a relation <m>R</m> on <m>A</m> such that <m>aRb</m> iff <m>a | b</m> (<m>a</m> divides <m>b</m>). The relation <m>R</m> can be represented by the set of ordered pairs where the first element divides the second:
        <me>
            R = \{(2,2),(2,4),(2,6),(2,8),(3,3),(3,6),(4,4),(4,8),(6,6),(8,8)\}
        </me>
    </p>
    <p>
        To understand the pairs in this relation, consider whether <m>2</m> divides <m>2</m>. Since it does, the pair <m>(2,2)</m> is included in <m>R</m>. However, <m>2</m> does not divide <m>3</m>, so any pair involving <m>2</m> and <m>3</m> is excluded. Following this logic, we include pairs where the first element divides the second.
    </p>
    <sage>
        <input>
            # Define the set A
            A = Set([2, 3, 4, 6, 8])

            # Define the relation R on A: aRb iff a divides b
            R = [(a, b) for a in A for b in A if a.divides(b)]

            print(R)
        </input>
    </sage>
    <p>
        A digraph, or directed graph, is a visual representation of a relation on a set. Every set element is shown as a node (vertex), and arrows between nodes represent the directional nature of the relation.
    </p>
    <sage>
        <input>
            # Create the digraph from the relation R
            R_graph = DiGraph(R, loops=True,)

            R_graph.show()
        </input>
      </sage>
    <p>
        <em>Example 2:</em> Consider the set <m>A = \{1,2,3\}</m>. Define a relation <m>R</m> on <m>A</m> such that <m>aRb</m> if and only if <m>a &lt; b</m>.
    </p>
    <sage>
        <input>
            # Define the set A
            A = Set([1, 2, 3])

            # Define the relation R on A: aRb if a &lt; b
            R = [(a, b) for a in A for b in A if a &lt; b]

            # Display the relation R
            R
        </input>
      </sage>
    <p>
        <em>Example 3:</em> Let <m>B = \{0,1\}</m> and define <m>A</m> as the power set of <m>B</m>, denoted <m>A = \mathcal{P}(B)</m>. Establish a relation <m>R</m> on <m>A</m> where <m>XRY</m> if and only if <m>X \subseteq Y</m>. This relation represents the idea of one set being a subset of another within the power set of <m>B</m>.
    </p>
    <p>
        To explore how elements relate within these examples, consider the element <m>\{1\}</m> in the context of the second example. The set <m>\{1\}</m> is not related to the empty set, denoted as <m>\{\}</m>, because <m>\{1\}</m> is not a subset of <m>\{\}</m>. Similarly, <m>\{1\}</m> does not relate to <m>\{0\}</m> because <m>\{1\}</m> is not a subset of <m>\{0\}</m>. However, <m>\{1\}</m> is related to <m>\{0,1\}</m> because <m>\{1\}</m> is indeed a subset of <m>\{0,1\}</m>, which we denote as <m>\{1\} R \{0,1\}</m>.
    </p>
    <sage>
        <input>
            # Define the set B
            B = Set([0, 1])

            # Generate the power set of B, denoted as A
            A = B.subsets()

            # Define the relation R on A where XRY iff X is a subset of Y
            R = [(X, Y) for X in A for Y in A if X.issubset(Y)]

            # Display the relation R
            print(R)

            # Explore specific relations
            # Check if {1} is a subset of the empty set
            print(Set([1]).issubset(Set([])))  # Expected output: False

            # Check if {1} is a subset of {0}
            print(Set([1]).issubset(Set([0])))  # Expected output: False

            # Check if {1} is a subset of {0, 1}
            print(Set([1]).issubset(Set([0, 1])))  # Expected output: True

        </input>
      </sage> 
</section>