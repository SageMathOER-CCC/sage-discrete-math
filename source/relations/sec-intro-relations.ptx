<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="intro-relations" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Introduction to Relations</title><idx><h>relation</h></idx>
    <p>
        A <term>relation</term> <m>R</m> from set <m>A</m> to set <m>B</m> is any subset of the Cartesian product <m>A \times B</m>, indicating that <m>R \subseteq A \times B</m>. We can ask Sage to decide if <m>R</m> is a relation from <m>A</m> to <m>B</m>. First, construct the Cartesian product <m>C = A \times B</m>. Then, build the set <m>S</m> of all subsets of <m>C</m>. Finally, ask if <m>R</m> is a subset of <m>S</m>.
    </p>
    <p>
        Recall the Cartesian product consists of all possible ordered pairs <m>(a, b)</m>, where <m>a \in A</m> and <m>b \in B</m>. Each pair combines an element from set <m>A</m> with an element from set <m>B</m>.
    </p>
    <p>
        In this example, an element in the set <m>A</m> relates to an element in <m>B</m> if the element from <m>A</m> is twice the element from <m>B</m>.
    </p>
    <sage>
        <input>
            A = Set([1, 2, 3, 4, 5, 6])
            B = Set([1, 2, 7])

            Car_Prod = Set(cartesian_product([A, B]))
            S = Subsets(Car_Prod)

            R = Set([(a, b) for a in A for b in B if a==2*b])

            print("R =", R)
            print("Is R a relation from set A to set B?", R in S)
        </input>
    </sage>
    <p>
        In this example we used the <c>Set</c> class to test for being a relation because the functions used to test for a relation require sets as inputs but for some of the chapter relations will be in the <c>list</c> class because of different functionality. 
    </p>


    <subsection xml:id="subsec-relation-composition">
        <title>Relation Composition</title>

        <p>
            If we have two relations with a set in common, such as <m>R_1</m> from <m>A</m> to <m>B</m> and <m>R_2</m> from <m>B</m> to <m>C</m>, we can compose them to create a relation between the two non repeated sets, such as <m>R_2 \circ R_1</m> from <m>A</m> to <m>C</m>. A composed relation <m>R_2 \circ R_1</m> is defined as the set of pairs <m>(a,c)</m> where <m>a \in A</m> and <m>c \in C</m> and there exists a <m>b \in B</m> such that <m>aR_1b</m> and <m>bR_2c</m>.
        </p>
        
        <p>
            We can also use Sage to compose relations.
        </p>
        <sage>
            <input>
                A = Set([1, 2, 3, 4, 5, 6])
                B = Set([1, 2, 7])
                R_1 = [(a, b) for a in A for b in B if a==2*b]

                C = Set([7,8,9,10])
                R_2 = [(a,c) for a in A for c in C if a + c == 10]
                
                R_2oR_1 = [(r_1[0], r_2[1]) for r_1 in R_1 for r_2 in R_2 if r_1[1] == r_2[0]]
                R_2oR_1
            </input>
        </sage>
    </subsection>
    

    <subsection xml:id="subsec-Relations-on-a-Set">
        <title>Relations On a Set</title>

        <p>
        When <m>A = B</m> we refer to the relation as a relation <term>on</term> <m>A</m>.
    </p>
    <p>
        Consider the set <m>A = \{2,3,4,6,8\}</m>. Let's define a relation <m>R</m> on <m>A</m> such that <m>aRb</m> iff <m>a | b</m> (<m>a</m> divides <m>b</m>). The relation <m>R</m> can be represented by the set of ordered pairs where the first element divides the second:
    </p>
    <sage>
        <input>
            A = Set([2, 3, 4, 6, 8])

            # Define the relation R on A: aRb iff a divides b
            R = Set([(a, b) for a in A for b in A if a.divides(b)])

            show(R)
        </input>
    </sage>
    </subsection>

</section>